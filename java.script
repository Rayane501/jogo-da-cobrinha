const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

const blockSize = 20;
const canvasWidth = canvas.width;
const canvasHeight = canvas.height;

let snake = [{ x: 100, y: 100 }];
let food = {};
let direction = 'RIGHT';
let nextDirection = 'RIGHT';
let gameOver = false;

document.addEventListener('keydown', changeDirection);

function draw() {
    if (gameOver) return;

    ctx.clearRect(0, 0, canvasWidth, canvasHeight);

    drawSnake();
    drawFood();
    moveSnake();
    checkCollisions();
    checkFood();

    setTimeout(draw, 100);
}

function drawSnake() {
    snake.forEach(segment => {
        ctx.fillStyle = '#388e3c';
        ctx.fillRect(segment.x, segment.y, blockSize, blockSize);
        ctx.strokeStyle = '#1b5e20';
        ctx.strokeRect(segment.x, segment.y, blockSize, blockSize);
    });
}

function drawFood() {
    ctx.fillStyle = 'red';
    ctx.beginPath();
    ctx.arc(food.x + blockSize / 2, food.y + blockSize / 2, blockSize / 2, 0, 2 * Math.PI);
    ctx.fill();
}

function moveSnake() {
    const head = { ...snake[0] };

    switch (nextDirection) {
        case 'LEFT':  head.x -= blockSize; break;
        case 'RIGHT': head.x += blockSize; break;
        case 'UP':    head.y -= blockSize; break;
        case 'DOWN':  head.y += blockSize; break;
    }

    snake.unshift(head);
    snake.pop();

    direction = nextDirection;
}

function changeDirection(event) {
    if (gameOver && event.key === 'Enter') {
        resetGame();
        return;
    }

    const key = event.key;

    if (key === 'ArrowLeft' && direction !== 'RIGHT') nextDirection = 'LEFT';
    else if (key === 'ArrowRight' && direction !== 'LEFT') nextDirection = 'RIGHT';
    else if (key === 'ArrowUp' && direction !== 'DOWN') nextDirection = 'UP';
    else if (key === 'ArrowDown' && direction !== 'UP') nextDirection = 'DOWN';
}

function checkCollisions() {
    const head = snake[0];

    // colisão com parede
    if (
        head.x < 0 || head.x >= canvasWidth ||
        head.y < 0 || head.y >= canvasHeight
    ) {
        endGame();
    }

    // colisão com o próprio corpo
    for (let i = 1; i < snake.length; i++) {
        if (snake[i].x === head.x && snake[i].y === head.y) {
            endGame();
        }
    }
}

function checkFood() {
    const head = snake[0];

    if (head.x === food.x && head.y === food.y) {
        // cresce
        snake.push({ ...snake[snake.length - 1] });
        placeFood();
    }
}

function placeFood() {
    food.x = Math.floor(Math.random() * (canvasWidth / blockSize)) * blockSize;
    food.y = Math.floor(Math.random() * (canvasHeight / blockSize)) * blockSize;

    // evita que a comida apareça em cima da cobra
    if (snake.some(segment => segment.x === food.x && segment.y === food.y)) {
        placeFood();
    }
}

function endGame() {
    gameOver = true;
    document.getElementById('game-over').style.display = 'block';
}

function resetGame() {
    snake = [{ x: 100, y: 100 }];
    direction = 'RIGHT';
    nextDirection = 'RIGHT';
    gameOver = false;
    document.getElementById('game-over').style.display = 'none';
    placeFood();
    draw();
}

placeFood();
draw();
